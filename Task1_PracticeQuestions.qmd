---
title: "Task 1: Practice Questions"
editor: visual
---

```{r}
library(tidyverse)
```

## Exam 1 Practice Problems

1.If your working directory is myfolder/homework/, what relative path would you specify to get the file located at myfolder/MyData.csv?

>  ../MyData.csv

2.  What are the major benefits of using R projects?

> RStudio Projects keeps all files of a project that someone is working on all together in one directory. This helps with a lot with staying organized, particularly as the project increases in size. It also keeps a command history and same working directory if you were to close RStudio & come back at a later time. Sometimes your environment needs to be reset and RStudio Projects allows you to reset your environment while keeping not only your work but your history.

3.  What is git and what is github?

> **Git** is a version control system that allows a user to track changes in source code. It stores data in a repository, which allows multiple users to collaborate on a project without all having to work on the same file document by allowing branches, a staging area for changes to documents, and directory that tracks the working history of the project. **Github** is the online platform that stores Git repositories. It allows multiple users to collaborate on projects while keeping track of all changes and all keeping track of all versions of the project. In short, **Git** is the source code version control system. **Github** is the host that allows people far away from each other to collaborate on projects and acts as a backup storage or Cloud.

4.  What are the two main differences between a tibble and a data.frame?

> **Printing** - Tibble only shows the first ten observations and only shows columns that fit on the screen. It also reports each columns type and name. A data frame will try to print everything regardless of size. **Subsetting** - A tibble never auto-simplifies (in other words, never drops a vector). A data.frame will drop vectors unless given the drop=false argument.

5.  Rewrite the following nested function call using BaseRâ€™s chaining operator:

```{r}
arrange(filter(select(as_tibble(iris), starts_with("Petal"), Species), Petal.Length <
1.55), Species)

```

> 

```{r}
iris |> 
  as_tibble()|>
  select(starts_with("Petal"), Species)|>
  filter(Petal.Length < 1.55) |>
  arrange(Species)
```
